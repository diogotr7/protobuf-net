using Google.Protobuf.Reflection;
using ProtoBuf.Meta;
using ProtoBuf.Reflection;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using Xunit;
using Xunit.Abstractions;

namespace ProtoBuf.Issues
{
    public class EscapedNamespaces
    {
        private readonly ITestOutputHelper _log;
        private void Log(string message) => _log?.WriteLine(message);
        public EscapedNamespaces(ITestOutputHelper log) => _log = log;

        const string Input = @"syntax = ""proto3"";

package mypackage.internal;

message Foo {};
";

        private const string Expected = 
"""
// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: my.proto
// </auto-generated>

#region Designer generated code
#pragma warning disable CS0612, CS0618, CS1591, CS3021, CS8981, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace mypackage.@internal
{

    [global::ProtoBuf.ProtoContract()]
    public partial class Foo : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

    }

}

#pragma warning restore CS0612, CS0618, CS1591, CS3021, CS8981, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
#endregion

""";

        [Fact]
        public void CSharpGeneratedCodeEscapedNamespaces()
        {
            var set = new FileDescriptorSet();
            set.Add("my.proto", true, new StringReader(Input));
            set.Process();
            Assert.Empty(set.GetErrors());
            var actualCsharp = CSharpCodeGenerator.Default.Generate(set).Single().Text;
            Log(actualCsharp);

            Assert.Equal(Expected, actualCsharp, ignoreLineEndingDifferences: true);
        }
    }
}
